import ApiError from '../exceptions/ApiError';

class BaseProxy {
    constructor(endpoint, parameters = {}) {
        this.endpoint = endpoint;
        this.parameters = parameters;
    }

    async submit(requestType, url, data = null) {
        let request = null;
        try {
            if (requestType === 'get') {
                request = window.axios.get(`${this.endpoint}${url}`, { params: data });
            } else if (requestType === 'delete') {
                request = window.axios.delete(`${this.endpoint}${url}`);
            } else if (requestType === 'put') {
                request = window.axios.put(`${this.endpoint}${url}`, data);
            } else if (requestType === 'post') {
                request = window.axios.post(`${this.endpoint}${url}`, data);
            }

            const response = await request;

            if (response.status === 200) {
                return response.data;
            }
        } catch (e) {
            if (
                e.response.status === 500
                || e.response.status === 401
                || e.response.status === 403
                || e.response.status === 404
                || e.response.status === 422
            ) {
                throw new ApiError({
                    status: e.response.status,
                    error: e.response.data,
                });
            }
        }

        return false;
    }

    find(id) {
        return this.submit('get', `/${id}`);
    }

    findAll() {
        return this.submit('get', '/all');
    }

    destroy(id) {
        return this.submit('delete', `/${id}`);
    }

    update(id, data) {
        return this.submit('post', `/${id}`, data);
    }

    store(data) {
        return this.submit('post', '', data);
    }
}

export default BaseProxy;
