<?php

namespace App\Exceptions;

use Exception;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Validation\ValidationException;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Report or log an exception.
     *
     * This is a great spot to send exceptions to Sentry, Bugsnag, etc.
     *
     * @param  \Exception  $exception
     * @return void
     */
    public function report(Exception $exception)
    {
        parent::report($exception);
    }

    /**
     * Render an exception into an HTTP response.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Exception  $e
     * @return \Illuminate\Http\Response
     */
    public function render($request, Exception $e)
    {
        if ($request->wantsJson()) {
            $response_code = null;
            $error_message = null;

            if ($e instanceof ValidationException) {
                $response_code = 422;
                $error_message = $e->errors();
            } elseif ($e instanceof AuthenticationException) {
                $response_code = 401;
                $error_message = $e->getMessage();
            } elseif ($e instanceof AuthorizationException) {
                $response_code = 403;
                $error_message = $e->getMessage();
            } elseif ($e instanceof ModelNotFoundException) {
                $response_code = 404;
                $error_message = $e->getMessage();
            }

            if (!is_null($response_code)) {
                return response()->json([
                    "status" => 0,
                    "errors" => $error_message,
                ], $response_code);
            }
        }

        return parent::render($request, $e);
    }
}
